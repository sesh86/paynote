{"version":3,"sources":["logo.svg","App.js","components/NavBar.js","components/Login.js","components/Notes.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","withRouter","props","react_default","a","createElement","className","Link","to","data-toggle","data-target","id","localStorage","getItem","onClick","removeItem","history","push","logout","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","ev","preventDefault","login","currentComponent","assertThisInitialized","i","target","elements","undefined","value","name","axios","post","then","response","data","setItem","setState","alert","catch","error","console","log","state","type","required","hidden","Notes","require","handleKeyPress","e","key","ctrlKey","index","currentTarget","note","textContent","items","text","handleChange","bind","handleSubmit","removeTodo","filter","htmlFor","onChange","Notes_TodoList","editNote","length","TodoList","map","item","contentEditable","onKeyUp","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","components_NavBar","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.add55449.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Link , NavLink,withRouter} from 'react-router-dom';\r\n\r\nconst logout=(props)=>{\r\n    localStorage.removeItem(\"login\");\r\n    props.history.push('/login');\r\n}\r\nconst NavBar=(props)=>{\r\n  return <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\"><span>PayNotes</span></Link>\r\n          <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarNav\"><span className=\"navbar-toggler-icon\"></span></button>\r\n            <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n            {/* {localStorage.getItem(\"login\")?\r\n              <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item\">\r\n                      <Link className=\"nav-link btn\" to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                      <NavLink className=\"nav-link btn\" to=\"/Timer\">Dashboards</NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                      <NavLink className=\"nav-link btn\" to=\"/Todo\">Reports</NavLink>\r\n                  </li>\r\n              </ul>:''} */}\r\n            </div>\r\n            {localStorage.getItem(\"login\")?<button className=\"btn btn-info\" onClick={()=>logout(props)}>Logout</button>:''}\r\n          </div>\r\n          \r\n    </nav>\r\n}\r\nexport default withRouter(NavBar);\r\n","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if(localStorage.getItem('login')) this.props.history.push('/notes')      \r\n    this.state = {alert:''};\r\n  }\r\n  onSubmit=(ev)=> {\r\n    ev.preventDefault();\r\n    let login={}\r\n    let currentComponent = this;\r\n\r\n    for(let i in ev.target.elements){\r\n      if(ev.target.elements[i].value!==undefined && ev.target.elements[i].value!==\"\")\r\n      login[ev.target.elements[i].name]=ev.target.elements[i].value;\r\n    }\r\n\r\n      axios.post('/login', login)\r\n        .then(function (response) {\r\n          if(response.data!=='Invalid UserName or Password'){\r\n            localStorage.setItem('login', true);\r\n            currentComponent.props.history.push('/notes')\r\n          }\r\n          else\r\n            currentComponent.setState({alert:response.data});\r\n          }\r\n        )\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n  }  \r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container cat\">\r\n        <br/>\r\n        <br/>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"container form-group\">\r\n          User Name<input type=\"text\" name=\"userName\" required className=\"form-control\"/>\r\n          Password   <input type=\"Password\" name=\"password\"  required  className=\"form-control\"/>\r\n          <br/>\r\n          <div className=\"alert alert-danger\" hidden={this.state.alert==''}>{this.state.alert}</div>\r\n          <button className=\"form-control btn btn-darkblue\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n)\r\n}\r\n}\r\n\r\nexport default Login;\r\n","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nvar ContentEditable = require(\"react-contenteditable\");\r\n\r\nclass Notes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if(!localStorage.getItem('login')) this.props.history.push('/login')\r\n    this.state = { items: [], text: '' };\r\n    let currentComponent = this;\r\n    axios.post('/getNotes')\r\n    .then(function (response) {\r\n            currentComponent.setState({items:response.data})\r\n        }\r\n    )\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });    \r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.removeTodo = this.removeTodo.bind(this);\r\n  }\r\n  // removeTodo(e){this.setState(state=>({items:this.state.items.filter(e1=>e1!==e)}));}\r\n\r\n  removeTodo(name){\r\n      this.setState({\r\n          items: this.state.items.filter(e => e !== name)\r\n      })\r\n  }\r\n  // <TodoList items={this.state.items} />//sets the property with the state value of the parent\r\n  render() {\r\n    return (\r\n      <div className=\"bg-payNotes p-5 \">\r\n        <h3 className=\"text-white\">PayNotes</h3>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label htmlFor=\"new-todo\">\r\n                What needs to be done?\r\n              </label>\r\n              <div className=\"row \">\r\n                  <div className=\"mx-auto\">\r\n                    <div className=\"input-group\">\r\n                    <input className=\"input-group-addon\"\r\n                      id=\"new-todo\"\r\n                      onChange={this.handleChange}\r\n                      value={this.state.text}\r\n                    />\r\n                    <button className=\"input-group-addon\">\r\n                      Add a New Note\r\n                    </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"card-body\"><TodoList items={this.state.items} editNote={this.handleKeyPress}/></div>\r\n          <div className=\"card-footer text-muted\">Click on the Item to Delete</div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  handleKeyPress=(e)=> {\r\n    if (e.key === 'Enter' && e.ctrlKey) {         \r\n        let currentComponent=this;\r\n        axios.post('/saveEditedNote',{index:e.currentTarget.id,note:e.currentTarget.textContent})\r\n        .then(function (response) {\r\n                currentComponent.setState({items:response.data})\r\n            }\r\n        )\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });            \r\n    }\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();//to prevent default action on submit\r\n    if (!this.state.text.length) {return;}\r\n    let currentComponent=this;\r\n    axios.post('/createNote',{note:this.state.text})\r\n    .then(function (response) {\r\n            currentComponent.setState({items:response.data})\r\n        }\r\n    )\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });    \r\n    \r\n    this.setState(state => ({\r\n      text: ''\r\n    }));\r\n  }\r\n}\r\n\r\nconst TodoList =(props)=>{\r\n  return (\r\n    <div className=\"container\">\r\n    {props.items.length>0 ? \"\" :<div className=\"col-12 m-5 mx-auto\">Add Items to your ToDo List</div>}\r\n    <div className=\"row justify-content-around\">\r\n      {props.items.map((item,index) => (\r\n          <div className=\"notes m-3 col-sm-3\">\r\n            <div contentEditable=\"true\" key={index} id={index} onKeyUp={props.editNote} >{item}</div>\r\n          </div>\r\n      ))}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport NavBar from './components/NavBar';\nimport Login from './components/Login';\nimport Notes from './components/Notes';\n\n\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route} from 'react-router-dom'\nReactDOM.render(\n    <BrowserRouter>\n    <div className=\"App\">\n    <NavBar/>\n    <Route exact path=\"/\" component={Login}/>\n    <Route path=\"/login\" component={Login}/>\n    <Route path=\"/notes\" component={Notes}/>\n    \n    </div>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}